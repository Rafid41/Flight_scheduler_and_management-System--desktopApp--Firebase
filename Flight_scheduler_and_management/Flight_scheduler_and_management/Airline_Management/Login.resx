<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>